---
import Layout from '../layouts/Layout.astro';
---

<Layout title="iPhone Calculator">
	<main class="flex flex-col justify-center items-center h-screen bg-black">
		<div class="calculator w-[300px] bg-black rounded-3xl p-8">
			<div class="display h-[100px] text-6xl text-white text-right p-5 box-border">0</div>
			<div class="flex justify-center items-end h-[450px]">
			<div class="buttons grid grid-cols-4 gap-[6px] justify-center items-center">
				<div class="flex items-center justify-center">
					<button class="bg-[#5C5B60] text-black">AC</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#5C5B60] text-black">+/-</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#5C5B60] text-black">%</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-orange-400">÷</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">7</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">8</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">9</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-orange-400">×</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">4</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">5</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">6</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-orange-400">-</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">1</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">2</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">3</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-orange-400">+</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">
						<svg fill="#ffffff" height="30px" width="30px" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 460 460" xml:space="preserve" stroke="#ffffff"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g id="XMLID_241_"> <g> <path d="M369.635,0H90.365C73.595,0,60,13.595,60,30.365v399.27C60,446.405,73.595,460,90.365,460h279.27 c16.77,0,30.365-13.595,30.365-30.365V30.365C400,13.595,386.405,0,369.635,0z M108.204,343.61v-43.196 c0-3.451,2.797-6.248,6.248-6.248h43.196c3.451,0,6.248,2.797,6.248,6.248v43.196c0,3.451-2.797,6.248-6.248,6.248h-43.196 C111.001,349.858,108.204,347.06,108.204,343.61z M108.204,256.61v-43.196c0-3.451,2.797-6.248,6.248-6.248h43.196 c3.451,0,6.248,2.797,6.248,6.248v43.196c0,3.451-2.797,6.248-6.248,6.248h-43.196C111.001,262.858,108.204,260.06,108.204,256.61 z M308.891,421H151.109c-11.046,0-20-8.954-20-20c0-11.046,8.954-20,20-20h157.782c11.046,0,20,8.954,20,20 C328.891,412.046,319.937,421,308.891,421z M208.402,294.165h43.196c3.451,0,6.248,2.797,6.248,6.248v43.196 c0,3.451-2.797,6.248-6.248,6.248h-43.196c-3.451,0-6.248-2.797-6.248-6.248v-43.196 C202.154,296.963,204.951,294.165,208.402,294.165z M202.154,256.61v-43.196c0-3.451,2.797-6.248,6.248-6.248h43.196 c3.451,0,6.248,2.797,6.248,6.248v43.196c0,3.451-2.797,6.248-6.248,6.248h-43.196C204.951,262.858,202.154,260.06,202.154,256.61 z M345.548,349.858h-43.196c-3.451,0-6.248-2.797-6.248-6.248v-43.196c0-3.451,2.797-6.248,6.248-6.248h43.196 c3.451,0,6.248,2.797,6.248,6.248v43.196h0C351.796,347.061,348.999,349.858,345.548,349.858z M345.548,262.858h-43.196 c-3.451,0-6.248-2.797-6.248-6.248v-43.196c0-3.451,2.797-6.248,6.248-6.248h43.196c3.451,0,6.248,2.797,6.248,6.248v43.196h0 C351.796,260.061,348.999,262.858,345.548,262.858z M354,149.637c0,11.799-9.565,21.363-21.363,21.363H127.364 C115.565,171,106,161.435,106,149.637V62.363C106,50.565,115.565,41,127.364,41h205.273C344.435,41,354,50.565,354,62.363V149.637 z"></path> </g> </g> </g></svg>
					</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C] col-span-2">0</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-[#2A2A2C]">.</button>
				</div>
				<div class="flex items-center justify-center">
					<button class="bg-orange-400">=</button>
				</div>
			</div>
			</div>
		</div>
	</main>
</Layout>

<style>
	.calculator{
		background: url(./iphone.webp) no-repeat;
		background-size: contain;
		width: 320px;
		height: 640px;
		display: block;
		filter: drop-shadow(0 0 10px rgba(66, 66, 66, 0.3));
	}
	button {
		@apply border-none text-2xl h-14 w-14 text-white cursor-pointer rounded-full flex justify-center items-center;
	}
</style>

<script>
	let display = document.querySelector('.display') as HTMLDivElement;
	let buttons = document.querySelectorAll('button');
	let currentValue: any = '0';
	let previousValue = '0';
	let operation: any = null;
	let resetDisplay = false;

	buttons.forEach(button => {
		button.addEventListener('click', () => {
			const value: any = button.textContent;

			if (value >= '0' && value <= '9' || value === '.') {
				if (currentValue === '0' || resetDisplay) {
					currentValue = value;
					resetDisplay = false;
				} else {
					currentValue += value;
				}
				updateDisplay();
			} else if (value === 'AC') {
				clear();
			} else if (value === '+/-') {
				currentValue = (parseFloat(currentValue) * -1).toString();
				updateDisplay();
			} else if (value === '%') {
				currentValue = (parseFloat(currentValue) / 100).toString();
				updateDisplay();
			} else if (value === '=' && operation) {
				calculate();
				operation = null;
			} else if (value === '+' || value === '-' || value === '×' || value === '÷') {
				if (operation) calculate();
				operation = value;
				previousValue = currentValue;
				resetDisplay = true;
			}
		});
	});

	function updateDisplay() {
		display.textContent = currentValue;
	}

	function clear() {
		currentValue = '0';
		previousValue = '0';
		operation = null;
		updateDisplay();
	}

	function calculate() {
		let result: any;
		const prev = parseFloat(previousValue);
		const current = parseFloat(currentValue);

		switch (operation) {
			case '+':
				result = prev + current;
				break;
			case '-':
				result = prev - current;
				break;
			case '×':
				result = prev * current;
				break;
			case '÷':
				result = prev / current;
				break;
		}

		currentValue = result.toString();
		updateDisplay();
	}
</script>